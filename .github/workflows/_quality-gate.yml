name: Quality Gate üõ°Ô∏è
run-name: Quality Gate üõ°Ô∏è

on:
    workflow_call:

env:
    PNPM_CACHE_DIR: ~/.local/share/pnpm/store

jobs:
    code-quality:
        name: 'Code Quality üßπ (OS: ${{ matrix.os }}, Node: ${{ matrix.node-version }}, PNPM: ${{ matrix.pnpm-version }})'
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: ['22.12.0']
                pnpm-version: ['10.12.4']
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ matrix.pnpm-version }}
                  run_install: false

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: pnpm

            - name: Cache pnpm store
              uses: actions/cache@v4
              with:
                  path: ${{ env.PNPM_CACHE_DIR }}
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Run code quality checks
              run: pnpm run check

    test:
        name: 'Test üß™ (OS: ${{ matrix.os }}, Node: ${{ matrix.node-version }}, PNPM: ${{ matrix.pnpm-version }})'
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-22.04]
                node-version: ['22.12.0']
                pnpm-version: ['10.12.4']
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ matrix.pnpm-version }}
                  run_install: false

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: pnpm

            - name: Cache pnpm store
              uses: actions/cache@v4
              with:
                  path: ${{ env.PNPM_CACHE_DIR }}
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Run tests
              run: pnpm run ci:test
              env:
                  CI: 'true'

            - name: Upload coverage
              uses: codecov/codecov-action@v5
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}

    build:
        name: 'Build üèóÔ∏è (OS: ${{ matrix.os }}, Node: ${{ matrix.node-version }}, PNPM: ${{ matrix.pnpm-version }})'
        needs:
            - code-quality
            - test
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-22.04]
                node-version: ['22.12.0']
                pnpm-version: ['10.12.4']

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ matrix.pnpm-version }}
                  run_install: false

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: pnpm

            - name: Cache pnpm store
              uses: actions/cache@v4
              with:
                  path: ${{ env.PNPM_CACHE_DIR }}
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build project
              run: pnpm run build
