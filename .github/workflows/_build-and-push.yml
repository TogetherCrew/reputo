name: Docker Build & Push üê≥
run-name: Docker Build & Push üê≥

on:
  workflow_call:
    inputs:
      ref: { type: string, required: true }
      push: { type: boolean, required: true }
      tags: { type: string, required: false, default: "" }
    outputs:
      image-tag:
        description: "The tag used for the built images"
        value: ${{ jobs.docker-images.outputs.image-tag }}

env:
  IMAGE_PREFIX: ghcr.io/togethercrew/reputo

jobs:
  docker-images:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        os: [ubuntu-latest]
        image: [api, ui, workflows]
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: inputs.push == true
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}/${{ matrix.image }}
          tags: |
            type=raw,value=main-${{ inputs.ref }}
            type=raw,value=staging,enable={{is_default_branch}}
            ${{ inputs.tags }}

      - name: Build and Push ${{ matrix.image }} image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile
          target: ${{ matrix.image }}
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
